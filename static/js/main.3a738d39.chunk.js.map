{"version":3,"sources":["components/ContactForm/ContactForm.module.css","css/fade.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Error/Error.module.css","css/errorFadeStyles.module.css","api/api.js","redux/phoneBookReducer.js","redux/store.js","redux/phoneBookSelectors.js","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Error/Error.jsx","App.js","index.js"],"names":["module","exports","instance","Axios","create","baseURL","contactsAPI","get","then","resp","data","name","number","post","id","delete","FETCH_CONTACTS_SUCCESS","FETCH_FAILURE","ADD_CONTACT","DELETE_CONTACT","CHANGE_FILTER","TOGGLE_ERROR","TOGGLE_LOADING","initialState","contacts","filter","showError","loading","error","failureRequest","type","payload","toggleError","toggleLoading","addContact","dispatch","contact","addContactSuccess","catch","deleteContact","deleteContactSuccess","phoneBookReducers","state","newContact","rootReducer","combineReducers","phoneBook","store","createStore","composeWithDevTools","applyMiddleware","thunk","getErrorState","getContacts","getVisibilityFilter","getFilteredContacts","createSelector","visibilityFilter","toLowerCase","includes","ContactsListItem","onDeleteContact","className","onClick","defaultProps","connect","find","getContactById","ownProps","ContactList","TransitionGroup","component","styles","contactList","map","CSSTransition","timeout","classNames","ContactForm","inputChangeHandler","e","setState","target","value","submitHandler","preventDefault","props","onToggleError","onAddContact","some","setTimeout","onSubmit","this","phoneBookForm","htmlFor","formLabel","formInput","required","onChange","Component","Filter","onChangeFilter","wrp","filterLabel","filterInput","changeFilter","closeHandler","App","onFetchContacts","in","errorFadeStyles","unmountOnExit","appear","fadeStyles","length","mapDispatchToProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a738d39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookForm\":\"ContactForm_phoneBookForm__1XE02\",\"formLabel\":\"ContactForm_formLabel__2duWw\",\"formInput\":\"ContactForm_formInput___WXnP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"fade_appear__2VM2Q\",\"appearActive\":\"fade_appearActive__3mQ-U\",\"enter\":\"fade_enter__1xbmd\",\"enterActive\":\"fade_enterActive__2z2PD\",\"exit\":\"fade_exit__1DlMN\",\"exitActive\":\"fade_exitActive__13LN7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrp\":\"Filter_wrp__3XZtv\",\"filterLabel\":\"Filter_filterLabel__1V7sX\",\"filterInput\":\"Filter_filterInput__2oNvj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2iaAo\",\"enter\":\"ContactList_enter__2ICE9\",\"enterActive\":\"ContactList_enterActive__Yho7K\",\"exit\":\"ContactList_exit__1o8xr\",\"exitActive\":\"ContactList_exitActive__tVlU8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__3UQuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"errorFadeStyles_enter__2AMpK\",\"enterActive\":\"errorFadeStyles_enterActive__pEf7_\",\"exit\":\"errorFadeStyles_exit__hos6a\",\"exitActive\":\"errorFadeStyles_exitActive__1JsRm\"};","import Axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://localhost:2000/\";\r\n\r\nconst instance = Axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\nexport const contactsAPI = {\r\n  getContacts() {\r\n    return instance.get(`contacts`).then((resp) => resp.data);\r\n  },\r\n  addContact(name, number) {\r\n    return instance\r\n      .post(`contacts`, { name, number })\r\n      .then((resp) => resp.data);\r\n  },\r\n  deleteContact(id) {\r\n    return instance.delete(`contacts/${id}`).then((resp) => resp);\r\n  },\r\n};\r\n","import { contactsAPI } from \"../api/api\";\r\n\r\nconst FETCH_CONTACTS_START = \"FETCH_CONTACTS_START\";\r\nconst FETCH_CONTACTS_SUCCESS = \"FETCH_CONTACTS_SUCCESS\";\r\nconst FETCH_FAILURE = \"FETCH_FAILURE\";\r\n\r\nconst ADD_CONTACT = \"ADD_CONTACT\";\r\nconst DELETE_CONTACT = \"DELETE_CONTACT\";\r\n\r\nconst CHANGE_FILTER = \"CHANGE_FILTER\";\r\nconst TOGGLE_ERROR = \"TOGGLE_ERROR\";\r\nconst TOGGLE_LOADING = \"TOGGLE_LOADING\";\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  filter: \"\",\r\n  showError: false,\r\n  loading: false,\r\n  error: {},\r\n};\r\n\r\nconst fetchContactsStart = () => ({ type: FETCH_CONTACTS_START });\r\n\r\nconst fetchContactsSuccess = (contacts) => ({\r\n  type: FETCH_CONTACTS_SUCCESS,\r\n  payload: {\r\n    contacts,\r\n  },\r\n});\r\n\r\nconst failureRequest = (error) => ({\r\n  type: FETCH_FAILURE,\r\n  payload: {\r\n    error,\r\n  },\r\n});\r\n\r\nconst addContactSuccess = ({ id, name, number }) => ({\r\n  type: ADD_CONTACT,\r\n  payload: {\r\n    contact: { id, name, number },\r\n    showError: false,\r\n  },\r\n});\r\n\r\nconst deleteContactSuccess = (id) => ({\r\n  type: DELETE_CONTACT,\r\n  payload: {\r\n    id,\r\n  },\r\n});\r\n\r\nexport const changeFilter = (filter) => ({\r\n  type: CHANGE_FILTER,\r\n  payload: {\r\n    filter,\r\n  },\r\n});\r\n\r\nexport const toggleError = (showError) => ({\r\n  type: TOGGLE_ERROR,\r\n  payload: {\r\n    showError,\r\n  },\r\n});\r\n\r\nconst toggleLoading = (loading) => ({\r\n  type: TOGGLE_LOADING,\r\n  payload: {\r\n    loading,\r\n  },\r\n});\r\n\r\nexport const fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactsStart());\r\n  dispatch(toggleLoading(true));\r\n\r\n  contactsAPI\r\n    .getContacts()\r\n    .then((data) => {\r\n      dispatch(fetchContactsSuccess(data));\r\n      dispatch(toggleLoading(false));\r\n    })\r\n    .catch((error) => dispatch(failureRequest(error)));\r\n};\r\n\r\nexport const addContact = (name, number) => (dispatch) => {\r\n  dispatch(toggleLoading(true));\r\n  contactsAPI\r\n    .addContact(name, number)\r\n    .then((data) => {\r\n      dispatch(addContactSuccess(data));\r\n      dispatch(toggleLoading(false));\r\n    })\r\n    .catch((error) => dispatch(failureRequest(error)));\r\n};\r\n\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  contactsAPI\r\n    .deleteContact(id)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(failureRequest(error)));\r\n};\r\n\r\nconst phoneBookReducers = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_CONTACTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, ...payload.contacts],\r\n      };\r\n\r\n    case FETCH_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: payload.error,\r\n      };\r\n\r\n    case ADD_CONTACT:\r\n      const newContact = {\r\n        id: payload.contact.id,\r\n        name: payload.contact.name,\r\n        number: payload.contact.number,\r\n      };\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, newContact],\r\n      };\r\n\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter((contact) => contact.id !== payload.id),\r\n      };\r\n\r\n    case CHANGE_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: payload.filter,\r\n      };\r\n\r\n    case TOGGLE_ERROR:\r\n      return {\r\n        ...state,\r\n        showError: payload.showError,\r\n      };\r\n\r\n    case TOGGLE_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: payload.loading,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default phoneBookReducers;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport phoneBookReducers from \"./phoneBookReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  phoneBook: phoneBookReducers,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getErrorState = (state) => {\r\n  return state.phoneBook.showError;\r\n};\r\n\r\nexport const getContacts = (state) => {\r\n  return state.phoneBook.contacts;\r\n};\r\n\r\nexport const getVisibilityFilter = (state) => {\r\n  return state.phoneBook.filter;\r\n};\r\n\r\nexport const getContactById = (state, id) => {\r\n  const contact = getContacts(state).find((contact) => contact.id === id);\r\n  return { ...contact };\r\n};\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getVisibilityFilter],\r\n  (contacts, visibilityFilter) => {\r\n    const filteredContacts = contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(visibilityFilter.toLowerCase())\r\n    );\r\n    return filteredContacts;\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { deleteContact } from '../../../redux/phoneBookReducer'\r\nimport {getContactById} from '../../../redux/phoneBookSelectors'\r\n\r\nconst ContactsListItem = ({  name, number  , onDeleteContact }) => {\r\n  return (\r\n    <li className={`basic`}> \r\n      <div>\r\n      <p>\r\n        <span>Name:</span> {name} \r\n      </p>\r\n      <p>\r\n        <span>Number:</span> {number}\r\n      </p>\r\n      </div>\r\n      <button type=\"button\" onClick={ onDeleteContact}>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactsListItem.defaultProps = {\r\n  name: \"anonymous\",\r\n  number: \"888888888\",\r\n  onDeleteContact: () => {},\r\n};\r\n\r\nContactsListItem.propTypes = {\r\n contact: PropTypes.object,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state, { id }) => (getContactById(state,id)) \r\n\r\n\r\nconst mapDispatchToProps = (dispatch,ownProps)=> {\r\n  return {\r\n    onDeleteContact: ()=> dispatch(deleteContact(ownProps.id)) \r\n }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactsListItem)\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {CSSTransition,TransitionGroup,} from 'react-transition-group';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { getFilteredContacts } from \"../../redux/phoneBookSelectors\";\r\n\r\nimport ContactsListItem from \"./ContactListItem/ContactListItem\";\r\n\r\nimport styles from './ContactList.module.css'\r\n\r\n\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  return <TransitionGroup component='ul' className={`${styles.contactList} `}>\r\n        {contacts.map(({ id }) => (\r\n              <CSSTransition  key={id}\r\n              timeout={250}\r\n              classNames={styles}>\r\n            <ContactsListItem id={id}/>\r\n              </CSSTransition>\r\n    )\r\n  )}\r\n        </TransitionGroup>;\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({contacts: getFilteredContacts(state)})\r\n\r\nContactList.defaultProps = {\r\n  contacts: [],\r\n  onDeleteContact: () => {},\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps,null)(ContactList)\r\n\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {addContact, toggleError} from '../../redux/phoneBookReducer'\r\nimport { getContacts } from \"../../redux/phoneBookSelectors\";\r\n\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  static defaultProps = {\r\n    onAddContact: () => {},\r\n  };\r\n\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  inputChangeHandler = (e,type) => {\r\n    this.setState({\r\n      [type]:e.target.value\r\n    })\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault()\r\n    const { name, number } = this.state\r\n    const {contacts,onToggleError,onAddContact} = this.props\r\n    this.setState({name:'',number:''})\r\n    if (contacts && contacts.some((contact) => contact.name === name)) {\r\n      onToggleError(true)\r\n      setTimeout(()=> onToggleError(false),3000)\r\n    } else {\r\n      onAddContact(name, number)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submitHandler} className={`${styles.phoneBookForm} basic`}>\r\n        <label htmlFor=\"formName\" className={styles.formLabel}> \r\n          Name\r\n          <input\r\n            className={styles.formInput}\r\n            required\r\n            id=\"formName\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={(e)=>this.inputChangeHandler(e,'name')}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"formNumber\" className={styles.formLabel}>\r\n          Number\r\n          <input\r\n            className={styles.formInput}\r\n            id=\"formNumber\"\r\n            type=\"number\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            required\r\n            onChange={(e)=>this.inputChangeHandler(e,'number')}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state)\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddContact: (name, number) => dispatch(addContact(name, number)),\r\n    onToggleError: (error)=> dispatch(toggleError(error))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {changeFilter} from '../../redux/phoneBookReducer'\r\nimport { getVisibilityFilter } from \"../../redux/phoneBookSelectors\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filter, onChangeFilter }) => {\r\n  return (\r\n    <div className={`${styles.wrp} basic`}>\r\n      <label className={styles.filterLabel}>\r\n        Find Contacts by name\r\n         </label> \r\n        <input \r\n          className={styles.filterInput}\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={(e) => onChangeFilter(e.target.value)}\r\n          /> \r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.defaultProps = {\r\n  onChangeFilter: () => {},\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChangeFilter: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) =>  ({\r\n    filter : getVisibilityFilter(state)\r\n  })\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>  ({\r\n    onChangeFilter: (filter)=>dispatch(changeFilter(filter))\r\n  })\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { toggleError } from '../../redux/phoneBookReducer'\r\n\r\nimport styles from './Error.module.css'\r\n\r\nconst Error=({closeHandler})=>  {\r\nreturn (\r\n        <div className={styles.error}>\r\n        <button onClick={()=>closeHandler(false)}></button>\r\n        <p>Contact is already existed</p>\r\n        </div>\r\n        );\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\nreturn {\r\n        closeHandler:(showError)=> dispatch(toggleError(showError))\r\n        }    \r\n}\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Error);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport { getContacts, getErrorState } from \"./redux/phoneBookSelectors\";\nimport { fetchContacts } from \"./redux/phoneBookReducer\";\n\nimport ContactList from \"./components/ContactList/ContactList\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport Error from \"./components/Error/Error.jsx\";\n\nimport fadeStyles from \"./css/fade.module.css\";\nimport errorFadeStyles from \"./css/errorFadeStyles.module.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onFetchContacts();\n  }\n\n  render() {\n    const { showError, contacts, filter } = this.props;\n\n    return (\n      <div className=\"App\">\n        <CSSTransition\n          in={showError}\n          timeout={250}\n          classNames={errorFadeStyles}\n          unmountOnExit\n        >\n          <Error />\n        </CSSTransition>\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={400}\n          classNames={fadeStyles}\n          unmountOnExit\n        >\n          <h1 className=\"main-title\">PhoneBook</h1>\n        </CSSTransition>\n        <ContactForm />\n\n        <CSSTransition\n          in={contacts && contacts.length > 0}\n          appear={true}\n          timeout={400}\n          classNames={fadeStyles}\n          unmountOnExit\n        >\n          <section>\n            <h2>Contacts</h2>\n\n            <CSSTransition\n              in={contacts && contacts.length > 1}\n              appear={true}\n              timeout={400}\n              classNames={fadeStyles}\n              unmountOnExit\n            >\n              <Filter value={filter} />\n            </CSSTransition>\n\n            <CSSTransition\n              in={contacts.length === 0}\n              appear={true}\n              timeout={400}\n              classNames={fadeStyles}\n              unmountOnExit\n            >\n              <p>no results were found for your search</p>\n            </CSSTransition>\n\n            <ContactList contacts={contacts} />\n          </section>\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: getContacts(state),\n  showError: getErrorState(state),\n});\n\nconst mapDispatchToProps = {\n  onFetchContacts: fetchContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\n\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}